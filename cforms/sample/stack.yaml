AWSTemplateFormatVersion: '2010-09-09'
Description: Ephemeral Environment Deployment

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Default: OrderMgmt

  TTL:
    Description: The amount of time you need this environment up and running for (in hours)
    Type: Number
    Default: 4

  WorkspaceDetails:
    Description: JSON string of workspace layout
    Type: String
    Default: '{"workspaces":[{"enableKai":true,"name":"workspace_1","size":"S-0"},{"enableKai":false,"name":"workspace_2","size":"S-00"}]}'

  WorkspaceEndpoint:
    Description: The endpoint_url of the workspaceGroup
    Type: String
  
  WorkspaceUsername:
    Description: The username for logging into the workspace
    Type: String
    Default: 'admin'
  
  WorkspacePassword:
    Description: The password for the user provided to login to the workspace
    Type: String
    Default: 'SingleStore1'

  WorkspaceMongoConn:
    Description: The connection string for connecting to SingleStore Kai
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
    DependsOn:
      - VPC
      - InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
    DependsOn: VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
    DependsOn: VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    DependsOn:
      - RouteTable
      - GatewayAttachment

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable
    DependsOn:
      - PublicSubnet
      - RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to instances
      VpcId: !Ref VPC
    DependsOn: VPC

  RedpandaInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c8a60caed22607cd
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds: [!Ref SecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 128
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo apt install -y git
          # Clone redpanda stack
          sudo git clone https://github.com/unnamedjk/docker-stacks /repo
          cd /repo/redpanda
          # Set env variables
          echo "AWS_PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)" > /repo/redpanda/.env
          echo "AWS_PUBLIC_HOSTNAME=$(curl http://169.254.169.254/latest/meta-data/public-hostname)" >> /repo/redpanda/.env
          # Start Redpanda
          sudo docker compose -f /repo/redpanda/docker-compose.yaml up -d
    DependsOn: 
      - PublicSubnet
      - SecurityGroup
Outputs:
  SDBInitScript:
    Description: The url location of the SQL init script template to be executed after standing up the stack
    Value: !Sub "https://raw.githubusercontent.com/unnamedjk/stacks/main/cforms/sample/init.sql"
  ManualMD:
    Description: The url location of the manual markdown file
    Value: !Sub "https://raw.githubusercontent.com/unnamedjk/stacks/main/cforms/sample/manual.md"
  RedpandaIPAddress:
    Description: Public IP address of the Redpanda instance
    Value: !GetAtt RedpandaInstance.PublicIp
  RedpandaHostname:
    Description: Public IP address of the Redpanda instance
    Value: !GetAtt RedpandaInstance.PublicDnsName